(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{332:function(n,t,a){"use strict";a.r(t);var s=a(2),e=Object(s.a)({},function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("blockquote",[a("p",[n._v("经过九九八十一天的刷题之后，本蒟蒻终于刷到蛇形矩阵了......")])]),n._v(" "),a("p",[n._v("本文只讲三种蛇形矩阵。")]),n._v(" "),a("h2",{attrs:{id:"蛇形矩阵1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蛇形矩阵1","aria-hidden":"true"}},[n._v("#")]),n._v(" 蛇形矩阵1")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://chungzhblog-photo.oss-cn-shenzhen.aliyuncs.com/%E5%8D%9A%E5%AE%A2/CODE/18/SnakeMatrix1.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析","aria-hidden":"true"}},[n._v("#")]),n._v(" 分析")]),n._v(" "),a("p",[n._v("很容易看出此题的算法。")]),n._v(" "),a("p",[n._v("看"),a("strong",[n._v("行数的奇偶")]),n._v("决定是从左往右放数字还是从右往左放。")]),n._v(" "),a("ul",[a("li",[n._v("奇数："),a("strong",[n._v("从左往右")])]),n._v(" "),a("li",[n._v("偶数："),a("strong",[n._v("从右往左")])])]),n._v(" "),a("h3",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码","aria-hidden":"true"}},[n._v("#")]),n._v(" 代码")]),n._v(" "),a("p",[n._v("这里先解释一下下面代码一些变量的含义：")]),n._v(" "),a("ul",[a("li",[a("code",[n._v("n")]),n._v("：矩阵的边长")]),n._v(" "),a("li",[a("code",[n._v("num")]),n._v("：输出的结果")]),n._v(" "),a("li",[a("code",[n._v("i")]),n._v("：行   "),a("code",[n._v("j")]),n._v("：列")])]),n._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main()\n{\n    int n;\n    int t = 1;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        int num;            \t// 如果是练习，使用数组更好。我这里用一个变量是为了过评测系统\n        if (i % 2 == 0)\n        {\n            t+=n-1;\t\t\t\t// 倒着放数字\n        } \n        for (int j = 1; j <= n; j++)\n        {\n            if (i % 2 == 0)\n            {\n                num = t--;\n            } else {\n                num = t++;\n            }\n            cout << num << ' ';\n        }\n        if (i % 2 == 0)\n        {\n            t+=n+1;\n        } \n        cout << endl;\n         \n    }\n    return 0;\n}\n")])])]),a("h4",{attrs:{id:"输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入","aria-hidden":"true"}},[n._v("#")]),n._v(" 输入")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("5\n")])])]),a("h4",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出","aria-hidden":"true"}},[n._v("#")]),n._v(" 输出")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1 2 3 4 5\n10 9 8 7 6\n11 12 13 14 15\n20 19 18 17 16\n21 22 23 24 25\n")])])]),a("p",[n._v("这还是最简单的，我们看看下一个难一点的。")]),n._v(" "),a("h2",{attrs:{id:"蛇形矩阵2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蛇形矩阵2","aria-hidden":"true"}},[n._v("#")]),n._v(" 蛇形矩阵2")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://chungzhblog-photo.oss-cn-shenzhen.aliyuncs.com/%E5%8D%9A%E5%AE%A2/CODE/18/SnakeMatrix2.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"分析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-2","aria-hidden":"true"}},[n._v("#")]),n._v(" 分析")]),n._v(" "),a("p",[n._v("也是看"),a("strong",[n._v("行数的奇偶")]),n._v("决定是从左往右放数字还是从右往左放。")]),n._v(" "),a("p",[a("strong",[n._v("和上一题不同的是")]),n._v("，这里还要控制每行放多少个数。")]),n._v(" "),a("h3",{attrs:{id:"代码-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码-2","aria-hidden":"true"}},[n._v("#")]),n._v(" 代码")]),n._v(" "),a("p",[n._v("变量说明：")]),n._v(" "),a("ul",[a("li",[a("code",[n._v("line")]),n._v("：行数")]),n._v(" "),a("li",[a("code",[n._v("num")]),n._v("：输出的结果")]),n._v(" "),a("li",[a("code",[n._v("lnu")]),n._v("： 每行数字的个数")]),n._v(" "),a("li",[a("code",[n._v("i")]),n._v("：行   "),a("code",[n._v("j")]),n._v("：列")])]),n._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int line;\n    cin >> line;\n    int num = 1;\n    int lnu = 1;\n    for (int i = 1; i <= line; i++)\n    {\n        if (i % 2 == 0)\n        {\n            num+=lnu-1;\t\t\t\n        }\n        for (int j = 1; j <= lnu; j++)\n        {\n            if (i % 2 == 1)\n            {\n                cout << num++ << ' ';\n            } else {\n                cout << num-- << ' ';\n            }\n        }\n        if (i % 2 == 0) num+=lnu+1;\n        lnu++;\n        cout << endl;\n    }\n    return 0;\n}\n")])])]),a("h4",{attrs:{id:"输入-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入-2","aria-hidden":"true"}},[n._v("#")]),n._v(" 输入")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("3 \n")])])]),a("h4",{attrs:{id:"输出-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出-2","aria-hidden":"true"}},[n._v("#")]),n._v(" 输出")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1\n3 2\n4 5 6\n")])])]),a("h2",{attrs:{id:"蛇形矩阵3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蛇形矩阵3","aria-hidden":"true"}},[n._v("#")]),n._v(" 蛇形矩阵3")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://chungzhblog-photo.oss-cn-shenzhen.aliyuncs.com/%E5%8D%9A%E5%AE%A2/CODE/18/SnakeMatrix3.png",alt:""}})]),n._v(" "),a("p",[n._v("这是一个螺旋形的蛇形矩阵，对于本蒟蒻来说就有点难啦~")]),n._v(" "),a("p",[n._v("一开始我还无从下手，看是看得懂规律，就是不会实现。。")]),n._v(" "),a("p",[n._v("过了几天我还硬逼自己做出来了😂")]),n._v(" "),a("h3",{attrs:{id:"分析-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-3","aria-hidden":"true"}},[n._v("#")]),n._v(" 分析")]),n._v(" "),a("p",[n._v("大家都看得出来，这个矩阵是螺旋形的。")]),n._v(" "),a("p",[n._v("所以，我们可以用一个大循环，里面嵌四个小循环，分别是"),a("strong",[n._v("从左上往右到右上")]),n._v("、"),a("strong",[n._v("从右上往下到右下")]),n._v("、"),a("strong",[n._v("从右下往左到左下")]),n._v("、"),a("strong",[n._v("从左下往上到左上")]),n._v("，就是这样~")]),n._v(" "),a("h3",{attrs:{id:"代码-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码-3","aria-hidden":"true"}},[n._v("#")]),n._v(" 代码")]),n._v(" "),a("p",[n._v("说明：")]),n._v(" "),a("ul",[a("li",[a("code",[n._v("n")]),n._v("：矩阵边长")]),n._v(" "),a("li",[a("code",[n._v("a")]),n._v("：存储蛇形矩阵的数组")]),n._v(" "),a("li",[n._v("请不要问我循环条件是怎么想出来的！！！keso......")])]),n._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#include <iostream>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    int a[n][n] = {0};\n    int val = 1;\n    for (int i = 0; i <= n/2; i++)                // 主循环\n    {\n        for (int j = i; j < n-i; j++)     // 从左上往右到右上\n        {\n            a[i][j] = val++;\n        }\n\n\n        for (int j = i+1; j < n-i; j++)         // 从右上往下到右下\n        {\n            a[j][n-i-1] = val++;\n        }\n\n\n        for (int j = n-i-2; j >= i; j--)      // 从右下往左到左下\n        {\n            a[n-i-1][j] = val++;\n        }\n\n    \n        for (int j = n-i-2; j > i; j--)       // 从左下往上到左上\n        {\n            a[j][i] = val++;\n        }\n    }\n    \n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            cout << a[i][j] << ' ';\n        }\n        cout << endl;\n    }\n\n    \n    return 0;\n}\n")])])]),a("h4",{attrs:{id:"输入-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入-3","aria-hidden":"true"}},[n._v("#")]),n._v(" 输入")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("6\n")])])]),a("h4",{attrs:{id:"输出-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出-3","aria-hidden":"true"}},[n._v("#")]),n._v(" 输出")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1 2 3 4 5 6\n20 21 22 23 24 7\n19 32 33 34 25 8\n18 31 36 35 26 9\n17 30 29 28 27 10\n16 15 14 13 12 11\n")])])]),a("p",[n._v("当然，我觉得你可能会看不懂这个代码（我不是觉得你的理解能力很差，而是我的代码可能很差😂）。你可以在每个循环后都输出一下结果，可能会帮助你理解。")])])},[],!1,null,null,null);t.default=e.exports}}]);