(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{284:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("最近尝试学习 Qt，觉得还挺有趣的。信号（Signal）和槽（Slot）可能是 Qt 最重要也是最独特的特性了，有了这个机制，Qt 才能变得如此强大！")]),t._v(" "),s("blockquote",[s("p",[t._v("顺便打一个广告，刚入门 Qt 就开始写的 "),s("a",{attrs:{href:"https://github.com/ChungZH/Notepanda",target:"_blank",rel:"noopener noreferrer"}},[t._v("Notepanda"),s("OutboundLink")],1),t._v(" 小项目，一个很 simple 的 notepad 啦~")]),t._v(" "),s("p",[t._v("事实证明，用边写边学的方式学习 Qt 是对的。这篇文章中的例子全都来自于我编写上面这个 Notepanda 的过程。")])]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("Signal 和 Slot 用于对象之间的通信，举个例子：我想要在点击一个 open 按钮时，自动调用 "),s("code",[t._v("Open()")]),t._v(" 函数。使用 Signal 和 Slot 就可以简单地实现这样的功能，通过一个 "),s("code",[t._v("connect()")]),t._v(" 函数就能绑定一对 Signal & Slot：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("actionOpen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("QAction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("triggered"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MainWindow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("open"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("下面是一张说明 Signal & Slot 如何工作的示意图：")]),t._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"Signal & Slot","data-src":"https://czh-img.oss-cn-shenzhen.aliyuncs.com/blog/code/qt-signal-slot/abstract-connections.png",loading:"lazy"}})]),t._v(" "),s("h2",{attrs:{id:"实现一个-slot-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-slot-函数"}},[t._v("#")]),t._v(" 实现一个 Slot 函数")]),t._v(" "),s("p",[t._v("先引用一段来自 Qt 官方文档的文字进一步说明 Signal & Slot 机制")]),t._v(" "),s("p",[t._v("::: theorem Signal&Slot\nSignal & Slot 机制是类型安全的: Signal 的签名必须与接收槽的签名相匹配。（事实上，一个 Slot 的签名可能比它接收到的 Signal 更短，因为它可以忽略额外的参数）由于签名是兼容的，当使用基于函数指针的语法时，编译器可以帮助我们检测类型不匹配。基于字符串的 SIGNAL 和 SLOT 语法将在运行时检测类型不匹配。Signal 和 Slot 是松散耦合的: 发出信号的类既不知道也不关心哪些插槽接收信号。Qt 的 Signal 和 Slot 机制确保了如果您将 Signal 连接到 Slot，Slot 将在正确的时间用 Signal 的参数调用。Signal 和 Slot 可以接受任意类型的任意数量的参数。\n:::")]),t._v(" "),s("p",[t._v("看不懂？没关系，我举一个带有参数的 Signal & Slot 例子。")]),t._v(" "),s("p",[t._v("我有一个 "),s("code",[t._v("TextEditor")]),t._v("（其实是一个 "),s("code",[t._v("QPlainTextEdit")]),t._v("） 对象，叫做 "),s("code",[t._v("plainTextEdit")]),t._v("。我要实现一个 undo 操作，我想在 undo 操作不可用时 Disable 掉 undo 的按钮。但我不知道现在能否在编辑器里进行 undo，"),s("code",[t._v("QPlainTextEdit")]),t._v(" 提供了一个 "),s("code",[t._v("undoAvailable(bool available)")]),t._v(" 的 Signal，如果不可用，它会将 "),s("code",[t._v("available")]),t._v(" 设成 "),s("code",[t._v("false")]),t._v("。否则为 "),s("code",[t._v("true")]),t._v("。所以现在我要实现一个 Slot。")]),t._v(" "),s("p",[t._v("首先定义一个 slot 函数：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWindow")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QMainWindow")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Q_OBJECT\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" slots"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setActUndoState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" available"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这样就定义好了一个 "),s("code",[t._v("setActUndoState(bool available)")]),t._v(" 的 Slot 函数。接着我要实现它：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWindow")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setActUndoState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" available"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("actionUndo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDisabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("available"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("最后 connect 这一对 Signal & Slot。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plainTextEdit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("TextEditor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("undoAvailable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MainWindow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("setActUndoState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("看上去很简单吧！其实，"),s("code",[t._v("setActUndoState(bool available)")]),t._v(" 函数里的 "),s("code",[t._v("available")]),t._v(" 参数就是在 Signal "),s("code",[t._v("undoAvailable(bool available)")]),t._v(" 里传送过来的。")]),t._v(" "),s("h2",{attrs:{id:"实现一个-signal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-signal"}},[t._v("#")]),t._v(" 实现一个 Signal")]),t._v(" "),s("p",[t._v("先介绍一下场景，我想要当 "),s("code",[t._v("QPlainTextEdit")]),t._v(" 打开的文件 title 改变时，随之改变窗口的 title。我要在 "),s("code",[t._v("TextEditor")]),t._v(" 端实现一个 Signal，然后在 UI 层的 "),s("code",[t._v("MainWindow")]),t._v(" 修改 title。")]),t._v(" "),s("p",[t._v("定义 Signal：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextEditor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QPlainTextEdit")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Q_OBJECT\n\n signals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("提醒")]),t._v("：")]),t._v(" "),s("p",[t._v("Signal 函数必须是 "),s("code",[t._v("void")]),t._v(" 类型的。")])]),t._v(" "),s("p",[t._v("然后，我要在改动文件 title 时发送这个 "),s("code",[t._v("changeTitle")]),t._v(" Signal。可以这样写：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nemit "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("这样就发送好了。继续在 "),s("code",[t._v("MainWindow")]),t._v(" 定义一个 Slot 函数：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWindow")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QMainWindow")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Q_OBJECT\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" slots"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeWindowTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后实现 "),s("code",[t._v("changeWindowTitle")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainWindow")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeWindowTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setWindowTitle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plainTextEdit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("currentFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - Notepanda"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("最后写 connect：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("plainTextEdit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("TextEditor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("changeTitle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MainWindow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("changeWindowTitle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这样就实现啦！怎么样，是不是很简单！对，就这么简单的东西我摸索了一早上才写对（"),s("s",[t._v("逃")])]),t._v(" "),s("p",[t._v("Qt 酱还是很有趣的！我越来越喜欢她啦~")]),t._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://doc.qt.io/qt-5/signalsandslots.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Signal & Slots - Qt Documentation"),s("OutboundLink")],1)])]),t._v(" "),s("Donate"),t._v(" "),s("Vssue",{attrs:{title:"Qt-signal-slot"}})],1)}),[],!1,null,null,null);a.default=e.exports}}]);